=======================
How to use 1-my_list.py
=======================

A module that defines a class ``Mylist`` that inherits from ``list``.

Import Module:
==============
>>>MyList = __import__('1-my_list').MyList

Usage:
======

Check that an empty string can be printed
>>> my_list = MYList()
>>> print(my_list)
[]

Check that ``MyList`` takes arguments
>>> my_list = MyList([1, 2, 3)
>>> print(my_list)
[1, 2, 3]

Check that it can use the append method
>>> my_list = MYList()
>>> my_list.append(1)
>>> my_list.append(2)
>>> my_list.append(3)
>>> print(my_list)
[1, 2, 3]

check that it can print sorted and not modifty the list
>>> my_list = MYList()
>>> my_list.append(1)
>>> my_list.append(4)
>>> my_list.append(2)
>>> my_list.append(3)
>>> my_list.append(5)
>>> print(my_list)
[1, 4, 2, 3, 5]

>>> my_list.print_sorted()
[1, 2, 3, 4, 5]

>>> print(my_list)
[1, 4, 2, 3, 5]

Check that it can print negative integers sort and not modify the list
>>> my_list = MYList()
>>> my_list.append(-1)
>>> my_list.append(-2)
>>> my_list.append(-3)
>>> my_list.append(-4)
>>> my_list.append(-5)
>>> print(my_list)
[-1, -2, -3, -4, -5]

>>> my_list.print_sorted()
[-5, -4, -3, -2, -1]

>>> print(my_list)
[-1, -4, -2, -3, -5]

Check that it can print strings sort and not modify
>>> my_list = MYList()
>>> my_list.append('love')
>>> my_list.append('eye')
>>> my_list.append('key')
>>> print(my_list)
['love', 'eye', 'key']

>>> my_list.print_sorted()
['eye', 'key' 'love']

>>> print(my_list)
['love', 'eye', 'key']

check that it can take both string and integers but cannot sort it
>>> my_list = MYList()
>>> my_list.append('1')
>>> my_list.append('eye')
>>> my_list.append('2')
>>> print(my_list)
['1', 'eye', '2']

>>> my_list.print_sorted()
Traceback (most recent last calls):
TypeError: unorderable types: str() < int()
